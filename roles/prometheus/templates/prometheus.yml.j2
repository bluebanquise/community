#jinja2: lstrip_blocks: "True"
#### Blue Banquise file ####
## {{ansible_managed}}

global:
{% for global_key, global_value in prometheus_server_configuration_global.items() %}
  {{ global_key }}: {{ global_value }}
{% endfor %}

rule_files:
  - 'alerts/*.yml'

alerting:
  alertmanagers:
  - static_configs:
    - targets:
      - {{ prometheus_server_alertmanager_host }}:9093 # Alertmanager is considered on the same host for now

{{ prometheus_server_prometheus_raw_configuration }}

scrape_configs:

  # I watch myself
  - job_name: 'prometheus_master'
    scrape_interval: 30s
    static_configs:
      - targets: ['localhost:9090']

{{ prometheus_server_prometheus_raw_jobs | indent(2, True) }}


# GENERIC EXPORTER
# All equipment profiles and their exporters
{% for equipment in j2_equipment_groups_list %}
  {% if hostvars[groups[equipment][0]]['prometheus_client_exporters'] is defined and hostvars[groups[equipment][0]]['prometheus_client_exporters'] is not none and hostvars[groups[equipment][0]]['monitoring']['exporters'] is defined and hostvars[groups[equipment][0]]['monitoring']['exporters'] is not none and hostvars[groups[equipment][0]]['monitoring']['exporters'] is iterable %}
    {% for exporter, exporter_vars in hostvars[groups[equipment][0]]['monitoring']['exporters'].items() %}
      {% if exporter != "ipmi_exporter" and exporter != "snmp_exporter" %}
  - job_name: '{{ equipment }}_{{ exporter }}'
    scrape_interval: {{ exporter_vars.scrape_interval | default('') }}
    scrape_timeout: {{ exporter_vars.scrape_timeout | default('') }}
    static_configs:
        {% for node in groups[equipment] %}
      - targets: ['{{ node }}:{{ exporter_vars.port }}']
        {% endfor %}
      {% endif %}
    {% endfor %}
  {% endif %}
{% endfor %}


# SNMP_EXPORTER
{% for equipment in j2_equipment_groups_list %}
  {% if hostvars[groups[equipment][0]]['prometheus_snmp_scrape'] %}
  - job_name: 'snmp_{{equipment}}'
    scrape_interval: {{ hostvars[groups[equipment][0]]['prometheus_snmp_scrape_interval'] | default('') }}
    scrape_timeout: {{ hostvars[groups[equipment][0]]['prometheus_snmp_scrape_timeout'] | default('') }}
    static_configs:
     - targets:
    {% for node in groups[equipment] %}
       - {{ node }}
    {% endfor %}

    metrics_path: /snmp
    # params:
     # module: [if_mib]
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: {{ prometheus_server_snmp_exporter_host }}:9116
  {% endif %}
{% endfor %}


# BMC - IPMI_EXPORTER
{% for equipment in j2_equipment_groups_list %}
  {% if hostvars[groups[equipment][0]]['prometheus_ipmi_scrape'] %}
  - job_name: ipmi_{{equipment}}
    params:
      module: [{{equipment}}]
    scrape_interval: {{ hostvars[groups[equipment][0]]['prometheus_ipmi_scrape_interval'] | default('') }}
    scrape_timeout: {{ hostvars[groups[equipment][0]]['prometheus_ipmi_scrape_timeout'] | default('') }}
    metrics_path: /ipmi
    scheme: http
    static_configs:
    {% for node in groups[equipment] %}
      {% if hostvars[node]['bmc'] is defined and not none %}
      - targets: ['{{hostvars[node]['bmc']['name']}}']
      {% endif %}
    {% endfor %}
    relabel_configs:
    - source_labels: [__address__]
      separator: ;
      regex: (.*)
      target_label: __param_target
      replacement: ${1}
      action: replace
    - source_labels: [__param_target]
      separator: ;
      regex: (.*)
      target_label: instance
      replacement: ${1}
      action: replace
    - separator: ;
      regex: .*
      target_label: __address__
      replacement: {{ prometheus_server_ipmi_exporter_host }}:9290
      action: replace
  {% endif %}
{% endfor %}
